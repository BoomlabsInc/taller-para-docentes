---
output:
  xaringan::moon_reader:
    css: "include/aprender.css"
    seal: false
    nature:
      countIncrementalSlides: yes
      highlightLines: yes
      highlightStyle: github
      ratio: 16:9
resource_files:
  - include
---
```{r, include = FALSE}
library(tidymodels)
library(tidyverse)
library(skimr)
```

---
class: title-slide, middle, center
# Modelar con **R**

---
class: dark, middle, center
# Paquetes para exploración

---
# Analisis rápido con `skimr`

```{r, eval = FALSE}
library(skimr)
skim(mtcars) 
```
```{r, out.height = 350, out.width = 800, fig.align = "center", echo = FALSE}
knitr::include_graphics("include/06-skimr.png")
```

---
# Correlaciones con `corrr`

```{r, eval = FALSE}
library(corrr)
mtcars %>% correlate() %>% shave()  %>% rplot()
```
```{r, out.height = 350, out.width = 700, fig.align = "center", echo = FALSE}
knitr::include_graphics("include/06-corrr.png")
```

---
class: exercise, middle, center
## Ejercicio
# Analyzar `vehiculos`
### **Archivo:** 05-vehiculos.Rmd

---
class: dark, middle, center
# Introduciendo `tidymodels`

---
class: regular

#`tidymodels`

.left-column[
```{r, out.height = 300, out.width = 280, fig.align = "center", echo = FALSE}
knitr::include_graphics("include/06-tidymodels_hex.png")
```
]
.right-column[
### Conjunto de paquetes para modelamiento y análisis estadístico  
### Comparten la misma filosofía de diseño, grámatica, y estructuras que el `tidyverse`
]

---
class: regular
# Lo que cubre el `tidymodels` 

```{r, out.height = 450, out.width = 1000, fig.align = "center", echo = FALSE}
knitr::include_graphics("include/cubre-tidymodels.png")
```

---
class: regular

# Paquetes del `tidymodels`

.left-column[
```{r, out.height = 400, out.width = 250, fig.align = "center", echo = FALSE}
knitr::include_graphics("include/tidymodels-first.png")
```
]
.right-column[
* `rsample` - Para re-tomar **muestras** de datos 

* `broom` - Modelos de R en tablas ordenadas

* `yardstick` - **Evaluar** modelos

* `recipes` - Para **pre-procesar datos**

]

---
class: regular
# Paquetes del `tidymodels`

.left-column[
```{r, out.height = 400, out.width = 250, fig.align = "center", echo = FALSE}
knitr::include_graphics("include/tidymodels-second.png")
```
]
.right-column[
* `infer` - Inferencias estadísticas

* `tidypredict` - Traduce predicciones a SQL

* `tidyposterior` - Compara modelos Bayes

* `tidytext` - Datos de texto
]

---
class: regular

# Muestra de datos con `rsample`

```{r}
library(rsample)
separar <- initial_split(mtcars)
testing(separar)
```

---
class: regular

# Resultados ordenados con `broom`

```{r}
 summary(lm(mpg ~ wt + cyl, data = mtcars))
```
---
class: regular

# Resultados ordenados con `broom`

```{r}
library(broom)
modelo <- lm(mpg ~ wt + cyl, data = training(separar))
tidy(modelo)
```
```{r}
glance(modelo)
```

---
class: regular

# Evalúe modelos con `yardstick`

```{r}
library(yardstick)
modelo %>%
  augment(newdata = testing(separar)) %>% 
  metrics(mpg, .fitted)
```

---
class: exercise, middle, center

## Ejercicio
# Modelos con `tidymodels`
### **Archivo:** 06-tidymodels.Rmd

---
class: dark, middle, center
# Modelo por sección

---
class: regular

# `group_nest()`

```{r}
mtcars %>%
  group_nest(cyl)
```

---
class: regular

# `map()`

```{r}
mtcars %>%
  group_nest(cyl) %>%
  mutate(modelos = map(data, ~lm(mpg ~ wt, data = .x)))
```

---
class: regular
# `map()` + `unnest()` 

```{r}
mtcars %>%
  group_nest(cyl) %>%
  mutate(modelos = map(data, ~lm(mpg ~ wt, data = .x)),
         resultados = map(modelos, glance)) %>%
  unnest(resultados)
```

---
class: exercise, middle, center
## Ejercicio
# Modelos por segmentos
### **Archivo:** 07-modelos.Rmd
